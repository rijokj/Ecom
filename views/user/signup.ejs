




<!DOCTYPE html>
<html lang="zxx" class="no-js">

<head>
	<!-- Mobile Specific Meta -->
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<!-- Favicon-->
	<link rel="shortcut icon" href="img/fav.png">
	<!-- Author Meta -->
	<meta name="author" content="CodePixar">
	<!-- Meta Description -->
	<meta name="description" content="">
	<!-- Meta Keyword -->
	<meta name="keywords" content="">
	<!-- meta character set -->
	<meta charset="UTF-8">
	<!-- Site Title -->
	<title>Karma Shop</title>

	<!--
		CSS
		============================================= -->
	<link rel="stylesheet" href="../user/css/linearicons.css">
	<link rel="stylesheet" href="../user/css/owl.carousel.css">
	<link rel="stylesheet" href="../user/css/themify-icons.css">
	<link rel="stylesheet" href="../user/css/font-awesome.min.css">
	<link rel="stylesheet" href="../user/css/nice-select.css">
	<link rel="stylesheet" href="../user/css/nouislider.min.css">
	<link rel="stylesheet" href="../user/css/bootstrap.css">
	<link rel="stylesheet" href="../user/css/main.css">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.css">
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js"></script>
	</head>

<body>

	<!-- Start Header Area -->
    <%- include('../layouts/header.ejs')Â %>	

	<!-- End Header Area -->

	<!-- Start Banner Area -->

	<!-- End Banner Area -->

	<!--================Register Box Area =================-->
	<section class="login_box_area section_gap">
		<div class="container">
				<div class="col-lg-12">
					<div class="login_form_inner">
						<h3>Register</h3>
						<form class="row login_form" id="myForm" method="post" action="">
              <div class="col-md-12 form-group">
								<input type="text" class="form-control" id="fname" name="fname" placeholder="First Name" onfocus="this.placeholder = ''" onblur="this.placeholder = 'First Name'" onkeyup="fnameValidation()">
								<span id="fnameError" class="text-danger"></span>
							</div>
              <div class="col-md-12 form-group">
								<input type="text" class="form-control" id="lname" name="lname" placeholder="Last Name" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Last Name'" onkeyup="lnameValidation()">
								<span id="lnameError" class="text-danger"></span>

							</div>
							<div class="col-md-12 form-group">
								<input type="text" class="form-control" id="email" name="email" placeholder="Email ID" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Email'" onkeyup="emailValidation()">
								<span id="emailError" class="text-danger"></span>

							</div>
              <div class="col-md-12 form-group">
								<input type="number" class="form-control" id="mno" name="mno" placeholder="Mobile Number" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Mobile'" onkeyup="mnoValidation()">
								<p id="err" class="text-danger"></p>
								<span id="mnoError" class="text-danger"></span>


							</div>
							<div class="col-md-12 form-group">
								<input type="password" class="form-control" id="password" name="password" placeholder="Password" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Password'" onkeyup="passwordValidation()">
								<span id="passwordError" class="text-danger"></span>

							</div>
							<div class="col-md-12 form-group">
								<input type="password" class="form-control" id="confPassword" name="confPassword" placeholder="Confirm Password" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Confirm Password'" onkeyup="confPasswordValidation()">
								<p id="err" class="text-danger"></p>
							</div>
							<span id="confPasswordError" class="text-danger"></span>

						
							<div class="col-md-12 form-group">
								<button type="submit"  class="primary-btn" onclick="sendOtp()">Register</button>
							
							</div>
						</form>
            <%=(typeof message!=='undefined')?message:""%>
					</div>
				</div>
			</div>
		</div>
	</section>
	<!--================End Register Box Area =================-->

	<!-- start footer Area -->
	<%- include('../layouts/footer.ejs') %>	

	<!-- End footer Area -->


	<script src="../user/js/vendor/jquery-2.2.4.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
	 crossorigin="anonymous"></script>
	<script src="../user/js/vendor/bootstrap.min.js"></script>
	<script src="../user/js/jquery.ajaxchimp.min.js"></script>
	<script src="../user/js/jquery.nice-select.min.js"></script>
	<script src="../user/js/jquery.sticky.js"></script>
	<script src="../user/js/nouislider.min.js"></script>
	<script src="../user/js/jquery.magnific-popup.min.js"></script>
	<script src="../user/js/owl.carousel.min.js"></script>
	<!--gmaps Js-->
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
	<script src="../user/js/gmaps.min.js"></script>
	<script src="../user/js/main.js"></script>

	<script>
		   function sendOtp() {
    var emailField = document.getElementById("email").value;

    // Validate email format
    if (!isValidEmail(emailField)) {
        alert("Please enter a valid email address.");
        return;
    }

    // Make AJAX request to send OTP
    $.ajax({
        type: "POST",
        url: "/sendotp", // Replace with your server endpoint for sending OTP
        data: { email: emailField },
        success: function (response) {
            // Handle the success response, you can show a message or perform other actions
            console.log("OTP sent successfully");
          
        },
        error: function (error) {
            // Handle the error response, show an alert or perform other actions
            console.error("Error sending OTP", error);
        }
    });
}
	</script>

	<script>
		const myForm = document.getElementById("myForm");
  const fname = document.getElementById("fname");
  const lname = document.getElementById("lname");
  const email = document.getElementById("email");
  const mno = document.getElementById("mno");
  const password = document.getElementById("password");
  const confPassword = document.getElementById("confPassword");

  const fnameError = document.getElementById("fnameError");
  const lnameError = document.getElementById("lnameError");
  const mnoError = document.getElementById("mnoError");
  const emailError = document.getElementById("emailError");
  const passwordError = document.getElementById("passwordError");
  const confPasswordError = document.getElementById("confPasswordError");






		const nameRegex = /^[A-Za-z]+$/;


		function fnameValidation(){
			const fnameValue = fname.value
			if(fnameValue.trim()==0){
				fnameError.innerHTML = 'First Name is required'
				fnameError.style.color = 'red'
				fname.style.border = "solid 2px red";
				return false;
			}

			if(!fnameValue.match(nameRegex)){
				fnameError.innerHTML = 'First Name is not Valid'
				fnameError.style.color = 'red'
				fname.style.border = "solid 2px red";
				return false;
			}



			fnameError.innerHTML = ""
			fnameError.style.color = "green"
			fname.style.border = "solid 2px green";
			return true
		}

		function lnameValidation(){
			const lnameValue = lname.value
			if(lnameValue.trim()==0){
				lnameError.innerHTML = 'First Name is required'
				lnameError.style.color = 'red'
				lname.style.border = "solid 2px red";
				return false;
			}

			if(!lnameValue.match(nameRegex)){
				lnameError.innerHTML = 'First Name is not Valid'
				lnameError.style.color = 'red'
				lname.style.border = "solid 2px red";
				return false;
			}



			lnameError.innerHTML = ""
			lnameError.style.color = "green"
			lname.style.border = "solid 2px green";
			return true
		
		}

		const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
        async function emailValidation() {
    const emailValue = email.value.trim();
    if (!emailValue.match(emailRegex)) {
      emailError.innerHTML = "Email not valid";
      emailError.style.color = "red";
      email.style.border = "solid 2px red";
      return false;
    }

    const isEmailAvailable = await checkEmailAvailability();

    if (!isEmailAvailable) {
      emailError.innerHTML = "Email already registered";
      emailError.style.color = "red";
      email.style.border = "solid 2px red";
      return false;
    }

    emailError.innerHTML = "";
    emailError.style.color = "green";
    email.style.border = "solid 2px green";
    return true;
  }





		const mobileRegex =  /^\d{10}$/
		function mnoValidation(){
			const mnoValue = mno.value
			if(!mnoValue.match(mobileRegex)){
				mnoError.innerHTML = 'Mobile Number not valid'
				mnoError.style.color = 'red'
				mno.style.border = "solid 2px red";
				return false;
			}
			mnoError.innerHTML = ""
			mnoError.style.color = "green"
			mno.style.border = "solid 2px green";
			return true
		}
		const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]).{8,}$/;
		function passwordValidation(){
			const passwordValue = password.value
			if(!passwordValue.match(passwordRegex)){
				passwordError.innerHTML = 'Password should contain atleast 8 characters  1 Uppercase , 1 number and a special character'
				passwordError.style.color = 'red'
				password.style.border = "solid 2px red";
				return false;
			}
			passwordError.innerHTML = ""
			passwordError.style.color = "green"
			password.style.border = "solid 2px green";
			return true
		}

		function confPasswordValidation(){
			const passwordValue = password.value
			const confPasswordValue = confPassword.value
			if(passwordValue !== confPasswordValue){
				console.log(confPasswordValue);
				confPasswordError.innerHTML = 'Password and Confirm Password should be same'
				confPasswordError.style.color = 'red'
				confPassword.style.border = "solid 2px red";
				return false;
			}
			confPasswordError.innerHTML = ""
			confPasswordError.style.color = "green"
			confPassword.style.border = "solid 2px green";
			return true
		}

     
        function checkEmailAvailability() {
    const emailValue = email.value.trim();

    // Check if the email is not empty
    if (emailValue === "") {
      emailError.textContent = "Email is required";
      return Promise.resolve(false);
    }

    // Make an AJAX request to check email availability
    return new Promise((resolve) => {
      $.ajax({
        url: "/check-email", // Update the URL to your server endpoint
        type: "POST",
        data: { email: emailValue },
        success: function (data) {
          if (data.exists) {
            emailError.textContent = "Email already registered";
            resolve(false);
          } else {
            emailError.textContent = "";
            resolve(true);
          }
        },
        error: function (error) {
          console.error("Error checking email availability:", error);
          resolve(false);
        },
      });
    });
  }

  myForm.addEventListener("submit", async (event) => {
    event.preventDefault();

    if (
      !fnameValidation() ||
      !lnameValidation() ||
      !(await emailValidation()) ||
      !mnoValidation() ||
      !passwordValidation() ||
      !confPasswordValidation()
    ) {
      return false;
    } else {
      myForm.submit();
    }
  });


		







	</script>







</body>

</html>